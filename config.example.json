{
  "assistantModels": {
    "gemma2": {
      "url": "http://localhost:8081/",
      "class": "Perk11\\Viktor89\\Assistant\\Gemma2Assistant",
      "abortResponseHandlers": {
        "\\Perk11\\Viktor89\\AbortStreamingResponse\\MaxLengthHandler": [
          4096
        ]
      }
    },
    "Dolphin3.0-R1-Mistral-24B-Q6_K_L": {
      "url": "http://localhost:8122/",
      "supportsResponseStart": false,
      "selectableByUser": true,
      "model": "Dolphin3.0-R1-Mistral-24B-Q6_K_L",
      "systemPrompt": "You are Dolphin, an AI assistant that helps humanity, trained by Eric Hartford to specialize in reasoning and first-principles analysis.\n\nWhen responding, always format your replies using <think>{reasoning}</think>{answer}. Use at least 6 reasoning steps and perform a root cause analysis before answering. However, if the answer is very easy and requires little thought, you may leave the <think></think> block empty.\n\nYour responses should be detailed, structured with rich Markdown formatting, and engaging with emojis. Be extensive in your explanations, just as the greatest scientific minds would be. Always reason through the problem first, unless it's trivial, in which case you may answer directly.",
      "class": "Perk11\\Viktor89\\Assistant\\ThinkRemovingOpenAIChatAssistant"
    },
    "gemma2-for-imagine": {
      "url": "http://localhost:8082/",
      "class": "Perk11\\Viktor89\\Assistant\\Gemma2Assistant",
      "abortResponseHandlers": {
        "\\Perk11\\Viktor89\\AbortStreamingResponse\\MaxLengthHandler": [
          800
        ]
      }
    },
    "vision-for-remix": {
      "url": "http://localhost:7070/",
      "supportsResponseStart": false,
      "selectableByUser": false,
      "model": "gemma3-12B-Q8_0-vision",
      "class": "Perk11\\Viktor89\\Assistant\\OpenAiChatAssistant"
    },
    "vision-for-restyle": {
      "url": "http://localhost:7070/",
      "supportsResponseStart": false,
      "selectableByUser": false,
      "model": "gemma3-12B-Q8_0-vision",
      "class": "Perk11\\Viktor89\\Assistant\\OpenAiChatAssistant"
    }
  },
  "imageModels": {
    "Kolors": {
      "width": 1024,
      "height": 1024,
      "steps": 45,
      "customUrl": "http://localhost:8093",
      "useOptions": false,
      "assistantPrompt": "Given a message, translate it to Chinese, add details, reword and expand on it in a way that describes an image illustrating user's message and output it in Chinese. This text will be used to generate an image using automatic text to image generator that does not understand emotions, metaphors or negatives. Your output should contain only a literal description of the image in Chinese. Only describe what an observer will see. Your output will be directly passed to an API, so don't output anything extra. Do not use any syntax or code formatting, just output raw text describing the image in Chinese  and nothing else. Your message to describe follows bellow:"
    },
    "icedit": {
      "steps": 28,
      "customUrl": "http://localhost:8131",
      "useOptions": false,
      "txt2img": false,
      "img2img": true
    },
    "stable-diffusion-xl": {
      "model": "sd_xl_base_1.0_0.9vae.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "steps": 30,
      "refiner_checkpoint": "sd_xl_refiner_1.0_0.9vae.safetensors",
      "refiner_switch_at": 0.8,
      "img2img": true
    },
    "AuraFlow": {
      "width": 1024,
      "height": 1024,
      "steps": 35,
      "customUrl": "http://localhost:8090",
      "useOptions": false
    },
    "HunyuanDiT": {
      "width": 1024,
      "height": 1024,
      "steps": 50,
      "customUrl": "http://localhost:8091",
      "useOptions": false
    },
    "Lumina-Next-SFT": {
      "width": 1024,
      "height": 1024,
      "steps": 35,
      "customUrl": "http://localhost:8092",
      "useOptions": false
    },
    "Juggernaut_X_RunDiffusion": {
      "model": "Juggernaut_X_RunDiffusion.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "cfg_scale": 3,
      "steps": 35,
      "negative_prompt": "bad eyes, cgi, airbrushed, plastic, deformed, watermark"
    },
    "leosamsHelloworldXL_hw50EulerALightning": {
      "model": "leosamsHelloworldXL_hw50EulerALightning.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "Euler a",
      "cfg_scale": 1,
      "steps": 8,
      "negative_prompt": "low quality, jpeg artifacts, blurry, poorly drawn, ugly, worst quality"
    },
    "leosamsHelloworldXL_helloworldXL70": {
      "model": "leosamsHelloworldXL_helloworldXL70.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "cfg_scale": 10,
      "steps": 35,
      "negative_prompt": "low quality, jpeg artifacts, blurry, poorly drawn, ugly, worst quality"
    },
    "realvisxlV40_v40Bakedvae": {
      "model": "realvisxlV40_v40Bakedvae.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "steps": 35,
      "negative_prompt": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth"
    },
    "animaPencilXL_v500": {
      "model": "animaPencilXL_v500.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "steps": 35
    },
    "animagineXLV31": {
      "model": "animagineXLV31_v31.safetensors",
      "width": 1024,
      "height": 1024,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "negative_prompt": "worst quality, low quality, lowres, (bad), text, error, fewer, extra, missing, worst quality, jpeg artifacts, low quality, watermark, unfinished, displeasing, oldest, early, chromatic aberration, signature, extra digits, artistic error, username, scan, [abstract]",
      "steps": 35
    },
    "AnythingXL": {
      "model": "AnythingXL_xl.safetensors",
      "width": 960,
      "height": 1536,
      "sampler_name": "DPM++ 2M",
      "scheduler": "karras",
      "negative_prompt": "lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry, artist name",
      "steps": 35
    },
    "rmsdxlHybridTurboXL_scorpius": {
      "model": "rmsdxlHybridTurboXL_scorpius.safetensors",
      "width": 832,
      "height": 1216,
      "sampler_name": "DPM++ 2S a",
      "scheduler": "karras",
      "cfg_scale": 2.75,
      "negative_prompt": "((blurry)),worst quality,platform,ugly,deformed,noisy,low poly,blurry,disfigured,studio,ai generated",
      "steps": 7
    },
    "stable-diffusion-1-5": {
      "model": "1.5.ckpt",
      "width": 512,
      "height": 512,
      "sampler_name": "Euler a",
      "steps": 50
    },
    "stable-diffusion-3-5-large": {
      "width": 1024,
      "height": 1024,
      "customUrl": "http://localhost:8095",
      "useOptions": false
    },
    "OmniGen-v1": {
      "width": 1024,
      "height": 1024,
      "steps": 50,
      "customUrl": "http://localhost:8097",
      "useOptions": false
    },
    "fast-hunyuan-video-t2v-720p-Q4_K_M": {
      "width": 544,
      "height": 960,
      "customUrl": "http://localhost:8116",
      "useOptions": false
    },
    "HiDream-fast-nf4": {
      "model": "fast-nf4",
      "width": 1024,
      "height": 1024,
      "customUrl": "http://localhost:8130",
      "negative_prompt": "deformed, ugly, watermark, text, scribbles, noise, static, low quality, bad quality, jpeg artifacts, low resolution",
      "useOptions": false,
      "img2img": true
    },
    "HiDream-dev-nf4": {
      "model": "dev-nf4",
      "width": 1024,
      "height": 1024,
      "customUrl": "http://localhost:8130",
      "negative_prompt": "deformed, ugly, watermark, text, scribbles, noise, static, low quality, bad quality, jpeg artifacts, low resolution",
      "useOptions": false,
      "img2img": true
    },
    "HiDream-full-nf4": {
      "model": "full-nf4",
      "width": 1024,
      "height": 1024,
      "customUrl": "http://localhost:8130",
      "negative_prompt": "deformed, ugly, watermark, text, scribbles, noise, static, low quality, bad quality, jpeg artifacts, low resolution",
      "useOptions": false,
      "img2img": true
    }
  },
  "imageSizes": [
    "model_default",
    "1024x1024",
    "1440x1800",
    "1344x1728",
    "1248x1824",
    "1024x1536",
    "960x1536",
    "896x1152",
    "832x1216",
    "768x1280",
    "768x1024",
    "768x960",
    "720x480",
    "512x512"
  ],
  "voiceModels": {
    "xtts_v2" : {
      "url": "http://localhost:8105",
      "voice_source": "voice.ogg"
    },
    "xtts_v2_Ana_Florence" : {
      "url": "http://localhost:8105",
      "speakerId": "Ana Florence"
    }
  },
  "videoModels": {
    "CogVideoX-5b": {
      "steps": 50,
      "url": "http://localhost:8101"
    },
    "CogVideoX-2b": {
      "steps": 50,
      "url": "http://localhost:8100"
    }
  },
  "videoEditModels": {
    "ditto": {
      "url": "http://localhost:8156",
      "model": "ditto"
    }
  },
  "img2videoModels": {
    "CogVideoX-5B-I2V": {
      "steps": 50,
      "url": "http://localhost:8103"
    }
  },
  "upscaleModels": {
    "4x-ESRGAN": {
      "url": "http://localhost:8132",
      "model": "4x-ESRGAN.pth"
    },
    "4xNomos2_hq_drct-l": {
      "url": "http://localhost:8132",
      "model": "4xNomos2_hq_drct-l.safetensors"
    },
    "4xNomosWebPhoto_esrgan": {
      "url": "http://localhost:8132",
      "model": "4xNomosWebPhoto_esrgan.safetensors"
    },
    "4x_foolhardy_Remacri": {
      "url": "http://localhost:8132",
      "model": "4x_foolhardy_Remacri.pth"
    },
    "1xDeJPG_realplksr_otf": {
      "url": "http://localhost:8132",
      "model": "1xDeJPG_realplksr_otf.safetensors",
      "source_max_height": 2048,
      "source_max_width": 2048
    },
    "Flux.1-dev-Controlnet-Upscaler": {
      "steps": 28,
      "url": "http://localhost:8104"
    }
  },
  "zoomModels": {
    "Chain-of-Zoom": {
      "url": "http://localhost:8138"
    }
  },
  "restyleModels": {
    "flux-dev-ufo": {
      "model": "flux-dev-ufo",
      "customUrl": "http://localhost:8146",
      "img2img": true,
      "tx2img": false,
      "useOptions": false
    }
  },
  "videoFirstFrameImageModels":  {
    "flux-dev-720x480": {
      "width": 720,
      "height": 480,
      "steps": 20,
      "customUrl": "http://localhost:8094",
      "useOptions": false
    }
  },
  "whisperCppUrl": "http://localhost:8102"
}
